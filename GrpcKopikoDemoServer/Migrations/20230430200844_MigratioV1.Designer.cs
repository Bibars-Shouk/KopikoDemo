// <auto-generated />
using System;
using GrpcKopikoDemoServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrpcKopikoDemoServer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230430200844_MigratioV1")]
    partial class MigratioV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.Order", b =>
                {
                    b.Property<long>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderShipAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderShipName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("OrderTotalPrice")
                        .HasColumnType("REAL");

                    b.Property<long>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.OrderDetails", b =>
                {
                    b.Property<long>("OrderDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("OrderID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PricePerPiece")
                        .HasColumnType("REAL");

                    b.Property<long>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("REAL");

                    b.Property<long>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderDetailsID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.Product", b =>
                {
                    b.Property<long>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductImageID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.User", b =>
                {
                    b.Property<long>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RefreshTokenExpiryDate")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.Order", b =>
                {
                    b.HasOne("GrpcKopikoDemoServer.DataModels.User", "user")
                        .WithMany("order")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.OrderDetails", b =>
                {
                    b.HasOne("GrpcKopikoDemoServer.DataModels.Order", "order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrpcKopikoDemoServer.DataModels.Product", "product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrpcKopikoDemoServer.DataModels.User", "user")
                        .WithMany("orderDetails")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("GrpcKopikoDemoServer.DataModels.User", b =>
                {
                    b.Navigation("order");

                    b.Navigation("orderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
